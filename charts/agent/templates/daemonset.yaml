{{- if eq ( include "agent.type" .) "daemonset" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "agent.fullname" . }}
  labels:
    {{- include "agent.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "agent.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "agent.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "agent.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
      {{- if and .Values.volumePermissions.enabled }}
        - name: fix-permissions
          image: {{ printf "%s:%s" .Values.volumePermissions.image.repository (default "latest" .Values.volumePermissions.image.tag) }}
          imagePullPolicy: {{ .Values.volumePermissions.image.pullPolicy | default "IfNotPresent" }}
          resources:
            limits:
              cpu: 50m
              memory: 32Mi
            requests:
              cpu: 50m
              memory: 32Mi
          command:
            - /bin/sh
            - -cx
            - |
              {{- if and .Values.securityContext.runAsUser .Values.securityContext.runAsGroup }}
              chown -Rvh {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsGroup }} /data
              {{- end }}
          volumeMounts:
            - name: agent-conf
              mountPath: /data/conf
            - name: agent-work
              mountPath: /data/work
            - name: agent-temp
              mountPath: /data/temp
            - name: agent-tools
              mountPath: /data/tools
            - name: agent-plugins
              mountPath: /data/plugins
            - name: agent-system
              mountPath: /data/system
          securityContext:
            runAsUser: 0
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: agent-conf
              mountPath: /data/teamcity_agent/conf
            - name: docker-sock
              mountPath: /var/run/docker.sock
            - name: buildagent-work
              mountPath: /opt/buildagent/work
            - name: buildagent-temp
              mountPath: /opt/buildagent/temp
            - name: buildagent-tools
              mountPath: /opt/buildagent/tools
            - name: buildagent-plugins
              mountPath: /opt/buildagent/plugins
            - name: buildagent-system
              mountPath: /opt/buildagent/system
          env:
            - name: SERVER_URL
              value: {{ quote (include "agent.server.url" .) }}
            - name: AGENT_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          {{- with .Values.additionalEnv }}
              {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: agent-conf
          hostPath:
            path: /data/teamcity_agent/conf
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock
        - name: buildagent-work
          hostPath:
            path: /opt/buildagent/work
        - name: buildagent-temp
          hostPath:
            path: /opt/buildagent/temp
        - name: buildagent-tools
          hostPath:
            path: /opt/buildagent/tools
        - name: buildagent-plugins
          hostPath:
            path: /opt/buildagent/plugins
        - name: buildagent-system
          hostPath:
            path: /opt/buildagent/system
{{- end }}
